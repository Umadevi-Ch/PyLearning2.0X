{
	"info": {
		"_postman_id": "52582e0f-d038-4737-b600-c644c617b79d",
		"name": "Simple LearningProject#2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33406365"
	},
	"item": [
		{
			"name": "Step #1:Create Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Local Variable\r",
							"var localvar_responseData = pm.response.json()\r",
							"console.log(localvar_responseData)\r",
							"\r",
							"//Data variable\r",
							"//Data driven testing\r",
							"//pm/iterationData.get, set\r",
							"\r",
							"//Environment Variable\r",
							"var token = localvar_responseData[\"token\"]\r",
							"//pm.environment.set(\"token\",token)\r",
							"\r",
							"//Global Variable\r",
							"//pm.globals.set(\"gtoken\",token)\r",
							"\r",
							"//Collection variable\r",
							"pm.collectionVariables.set(\"token\",token)\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}"
				},
				"url": {
					"raw": "{{url}}/auth",
					"host": [
						"{{url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Step #2:Create Booking to get Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(localvar_responseData)\r",
							"var localvar_responseData = pm.response.json()\r",
							"var bookingid = localvar_responseData[\"bookingid\"]\r",
							"pm.collectionVariables.set(\"bookingid\", bookingid)\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Jim\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
				},
				"url": {
					"raw": "{{url}}/booking",
					"host": [
						"{{url}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Step #3:Update Booking with Id and Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Content type is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"",
							"pm.test(\"Firstname and lastname are non-empty strings\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.firstname).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Firstname should not be empty\");",
							"    pm.expect(responseData.lastname).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Lastname should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Totalprice is a non-negative integer\", function () {",
							"    const responseData = pm.response.json();",
							"",
							"    pm.expect(responseData.totalprice).to.be.a('number');",
							"    pm.expect(responseData.totalprice).to.be.at.least(0);",
							"});",
							"",
							"",
							"pm.test(\"Depositpaid is a boolean value\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.depositpaid).to.be.a('boolean');",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "token={{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"James\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
				},
				"url": {
					"raw": "{{url}}/booking/{{bookingid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"booking",
						"{{bookingid}}"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://restful-booker.herokuapp.com"
		},
		{
			"key": "Ctoken",
			"value": ""
		},
		{
			"key": "bookingid",
			"value": ""
		},
		{
			"key": "token",
			"value": ""
		}
	]
}